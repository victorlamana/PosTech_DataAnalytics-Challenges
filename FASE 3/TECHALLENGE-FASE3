{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"collapsed_sections":["S1_wvxfzrSgU","WGPOj3e-sImD","hsKu7hz9u7wz","PNGX4wtPw6D4","kMFu9gT4xN-4"],"authorship_tag":"ABX9TyOoCREmK7YB3CHipVCGoiJn"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# TECH CHALLENGE FASE 3"],"metadata":{"id":"g5jkbd_MrAV3"}},{"cell_type":"markdown","source":["##INICIALIZAÇÃO"],"metadata":{"id":"EwCZk4aKrE2M"}},{"cell_type":"code","source":["pip install pyspark"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"epvELWnRy1Xd","outputId":"e5bb79f8-1246-4bea-80c4-8c59712b77fe"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting pyspark\n","  Downloading pyspark-3.5.1.tar.gz (317.0 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m317.0/317.0 MB\u001b[0m \u001b[31m1.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","Requirement already satisfied: py4j==0.10.9.7 in /usr/local/lib/python3.10/dist-packages (from pyspark) (0.10.9.7)\n","Building wheels for collected packages: pyspark\n","  Building wheel for pyspark (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for pyspark: filename=pyspark-3.5.1-py2.py3-none-any.whl size=317488491 sha256=6db441466af6e7f709a2cb3bb4b547b5fdf76012ae74e876eb8aa685a76894b6\n","  Stored in directory: /root/.cache/pip/wheels/80/1d/60/2c256ed38dddce2fdd93be545214a63e02fbd8d74fb0b7f3a6\n","Successfully built pyspark\n","Installing collected packages: pyspark\n"]}]},{"cell_type":"code","source":["from google.colab import auth\n","from google.cloud import bigquery\n","import matplotlib.pyplot as plt\n","from pyspark.sql import SparkSession\n","from pyspark.sql.functions import col\n","import pandas as pd\n","from pyspark.sql import functions as F\n","from itertools import combinations\n","\n","auth.authenticate_user()"],"metadata":{"id":"kGXVko79rYuL","executionInfo":{"status":"ok","timestamp":1710867100294,"user_tz":180,"elapsed":16495,"user":{"displayName":"Victor DEV","userId":"12673627971948178805"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["spark = SparkSession.builder.master('local[*]').getOrCreate()"],"metadata":{"id":"6AHmAOuLzkg-","executionInfo":{"status":"ok","timestamp":1710867115146,"user_tz":180,"elapsed":8264,"user":{"displayName":"Victor DEV","userId":"12673627971948178805"}}},"execution_count":4,"outputs":[]},{"cell_type":"markdown","source":["### SETUP CONEXÃO BIG QUERY"],"metadata":{"id":"S1_wvxfzrSgU"}},{"cell_type":"markdown","source":[],"metadata":{"id":"JOAQqErZrG6f"}},{"cell_type":"code","source":["project_id = 'techchallenge3-416122'"],"metadata":{"id":"v10klo1Hqfme","executionInfo":{"status":"ok","timestamp":1710867134383,"user_tz":180,"elapsed":459,"user":{"displayName":"Victor DEV","userId":"12673627971948178805"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["client=bigquery.Client(project=project_id)"],"metadata":{"id":"kFmBr-9Tqmwg","executionInfo":{"status":"ok","timestamp":1710867134967,"user_tz":180,"elapsed":1,"user":{"displayName":"Victor DEV","userId":"12673627971948178805"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["dataset_ref=client.dataset(\"pnad_covid19\",project=\"techchallenge3-416122\")\n","dataset=client.get_dataset(dataset_ref)"],"metadata":{"id":"fYAKKNL6qxVd","executionInfo":{"status":"ok","timestamp":1710867136173,"user_tz":180,"elapsed":1207,"user":{"displayName":"Victor DEV","userId":"12673627971948178805"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["tables=list(client.list_tables(dataset))\n","\n","for table in tables:\n","  print(table.table_id)"],"metadata":{"id":"8qLnqkoUsNdg","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1710867136173,"user_tz":180,"elapsed":2,"user":{"displayName":"Victor DEV","userId":"12673627971948178805"}},"outputId":"32b22fa2-36e5-4267-9d1e-afbcf54f444c"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["DimPopulacaoCorRaca\n","DimPopulacaoEscolaridade\n","DimPopulacaoSexo\n","DimPopulacaoSituacaoDomicilio\n","DimPopulacaoUF\n","DimSaudeBuscouAmbulatorioConsultorioPrivadoForcasArmadas\n","DimSaudeBuscouEstabelecimentoSaude\n","DimSaudeBuscouHospitalPrivadoForcasArmadas\n","DimSaudeBuscouHospitalSUS\n","DimSaudeBuscouProntoSocorroPrivadoForcasArmadas\n","DimSaudeBuscouProntoSocorroSUSUPA\n","DimSaudeBuscouUnidadeBasicaSaude\n","DimSaudeCancer\n","DimSaudeDepressao\n","DimSaudeDiabetes\n","DimSaudeDiarreia\n","DimSaudeDificuldadeRespirar\n","DimSaudeDoencaCoracao\n","DimSaudeDoencaRespiratoria\n","DimSaudeDorCabeca\n","DimSaudeDorGarganta\n","DimSaudeDorMuscular\n","DimSaudeDorOlhos\n","DimSaudeDorPeito\n","DimSaudeFadiga\n","DimSaudeFebre\n","DimSaudeFezAlgumTeste\n","DimSaudeFezExameSWAB\n","DimSaudeFezExameSangueBraco\n","DimSaudeFezExameSangueDedo\n","DimSaudeHipertensao\n","DimSaudeNarizEntupido\n","DimSaudeNausea\n","DimSaudePerdaCheiroSabor\n","DimSaudeResultadoExameSWAB\n","DimSaudeResultadoExameSangueBraco\n","DimSaudeResultadoExameSangueDedo\n","DimSaudeResultadoTeste\n","DimSaudeSintomasConjugados\n","DimSaudeTipoTeste\n","DimSaudeTosse\n","DimTrabalhoAfastamentoTemporario\n","DimTrabalhoMotivoAfastamentoTemporario\n","DimTrabalhoRamoAtividadeEmpresa\n","DimTrabalhoTipoContratoTrabalho\n","FatoPnadCovid\n","dicionario\n","microdados\n"]}]},{"cell_type":"markdown","source":["##LENDO TABELAS"],"metadata":{"id":"Qu2RFtbOrNIS"}},{"cell_type":"markdown","source":["###FATO (Tabela Principal)"],"metadata":{"id":"d12UIrMisBMA"}},{"cell_type":"code","source":["table_ref=dataset_ref.table('FatoPnadCovid')\n","table=client.get_table(table_ref)\n","fato=client.list_rows(table).to_dataframe()\n","fato_raw = spark.createDataFrame(fato)"],"metadata":{"id":"xc9278suscDT","executionInfo":{"status":"ok","timestamp":1710867514417,"user_tz":180,"elapsed":373039,"user":{"displayName":"Victor DEV","userId":"12673627971948178805"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["fato.info()"],"metadata":{"id":"K3IXO0mmtkEd","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1710867514418,"user_tz":180,"elapsed":12,"user":{"displayName":"Victor DEV","userId":"12673627971948178805"}},"outputId":"f28303b0-3b97-4136-f490-531a1c1e5929"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 1157984 entries, 0 to 1157983\n","Data columns (total 49 columns):\n"," #   Column                                                    Non-Null Count    Dtype\n","---  ------                                                    --------------    -----\n"," 0   ano                                                       1157984 non-null  Int64\n"," 1   mes                                                       1157984 non-null  Int64\n"," 2   semana                                                    1157984 non-null  Int64\n"," 3   id_uf                                                     1157984 non-null  Int64\n"," 4   id_situacao_domicilio                                     1157984 non-null  Int64\n"," 5   idade                                                     1157984 non-null  Int64\n"," 6   id_sexo                                                   1157984 non-null  Int64\n"," 7   id_cor_raca                                               1157984 non-null  Int64\n"," 8   id_escolaridade                                           1157984 non-null  Int64\n"," 9   id_febre                                                  1157984 non-null  Int64\n"," 10  id_tosse                                                  1157984 non-null  Int64\n"," 11  id_dor_garganta                                           1157984 non-null  Int64\n"," 12  id_dificuldade_respirar                                   1157984 non-null  Int64\n"," 13  id_dor_cabeca                                             1157984 non-null  Int64\n"," 14  id_dor_peito                                              1157984 non-null  Int64\n"," 15  id_nausea                                                 1157984 non-null  Int64\n"," 16  id_nariz_entupido                                         1157984 non-null  Int64\n"," 17  id_fadiga                                                 1157984 non-null  Int64\n"," 18  id_dor_olhos                                              1157984 non-null  Int64\n"," 19  id_perda_cheiro_sabor                                     1157984 non-null  Int64\n"," 20  id_dor_muscular                                           1157984 non-null  Int64\n"," 21  id_diarreia                                               1157984 non-null  Int64\n"," 22  id_buscou_estabelecimento_saude                           1157984 non-null  Int64\n"," 23  id_buscou_unidade_basica_saude                            1157984 non-null  Int64\n"," 24  id_buscou_pronto_socorro_sus_upa                          1157984 non-null  Int64\n"," 25  id_buscou_hospital_sus                                    1157984 non-null  Int64\n"," 26  id_buscou_ambulatorio_consultorio_privado_forcas_armadas  1157984 non-null  Int64\n"," 27  id_buscou_pronto_socorro_privado_forcas_armadas           1157984 non-null  Int64\n"," 28  id_buscou_hospital_privado_forcas_armadas                 1157984 non-null  Int64\n"," 29  id_fez_algum_teste                                        1157984 non-null  Int64\n"," 30  id_fez_exame_swab                                         1157984 non-null  Int64\n"," 31  id_resultado_exame_swab                                   1157984 non-null  Int64\n"," 32  id_fez_exame_sangue_dedo                                  1157984 non-null  Int64\n"," 33  id_resultado_exame_sangue_dedo                            1157984 non-null  Int64\n"," 34  id_fez_exame_sangue_braco                                 1157984 non-null  Int64\n"," 35  id_resultado_exame_sangue_braco                           1157984 non-null  Int64\n"," 36  id_resultadoteste                                         1157984 non-null  Int64\n"," 37  id_testecovid                                             1157984 non-null  Int64\n"," 38  id_diabetes                                               1157984 non-null  Int64\n"," 39  id_hipertensao                                            1157984 non-null  Int64\n"," 40  id_doencarespiratoria                                     1157984 non-null  Int64\n"," 41  id_doencacoracao                                          1157984 non-null  Int64\n"," 42  id_depressao                                              1157984 non-null  Int64\n"," 43  id_cancer                                                 1157984 non-null  Int64\n"," 44  id_afastamento_temporario                                 1157984 non-null  Int64\n"," 45  id_motivo_afastamento_temporario                          1157984 non-null  Int64\n"," 46  id_tipo_contrato_trabalho                                 1157984 non-null  Int64\n"," 47  id_ramo_atividade_empresa                                 1157984 non-null  Int64\n"," 48  id_sintomas_conjugados                                    1157984 non-null  Int64\n","dtypes: Int64(49)\n","memory usage: 487.0 MB\n"]}]},{"cell_type":"code","source":["fato.head()"],"metadata":{"id":"nc98dEh_tdP2","colab":{"base_uri":"https://localhost:8080/","height":256},"executionInfo":{"status":"ok","timestamp":1710867514418,"user_tz":180,"elapsed":4,"user":{"displayName":"Victor DEV","userId":"12673627971948178805"}},"outputId":"c1c61ad5-2dfd-47b5-d361-467a66b9a273"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    ano  mes  semana  id_uf  id_situacao_domicilio  idade  id_sexo  \\\n","0  2020    8       3     16                      1      0        1   \n","1  2020    8       3     50                      1      0        1   \n","2  2020    8       1     31                      2      0        2   \n","3  2020    7       3     15                      1      0        1   \n","4  2020    7       3     51                      1      0        2   \n","\n","   id_cor_raca  id_escolaridade  id_febre  ...  id_hipertensao  \\\n","0            1                1         2  ...               2   \n","1            1                1         2  ...               2   \n","2            4                1         2  ...               2   \n","3            4                1         2  ...               2   \n","4            1                1         2  ...               2   \n","\n","   id_doencarespiratoria  id_doencacoracao  id_depressao  id_cancer  \\\n","0                      2                 2             2          2   \n","1                      2                 2             2          2   \n","2                      2                 2             2          2   \n","3                      2                 2             2          2   \n","4                      2                 2             2          2   \n","\n","   id_afastamento_temporario  id_motivo_afastamento_temporario  \\\n","0                          0                                 0   \n","1                          0                                 0   \n","2                          0                                 0   \n","3                          0                                 0   \n","4                          0                                 0   \n","\n","   id_tipo_contrato_trabalho  id_ramo_atividade_empresa  \\\n","0                          0                          0   \n","1                          0                          0   \n","2                          0                          0   \n","3                          0                          0   \n","4                          0                          0   \n","\n","   id_sintomas_conjugados  \n","0                       0  \n","1                       0  \n","2                       0  \n","3                       0  \n","4                       0  \n","\n","[5 rows x 49 columns]"],"text/html":["\n","  <div id=\"df-d297d673-7ebb-4d80-b091-f64c0bbfe181\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ano</th>\n","      <th>mes</th>\n","      <th>semana</th>\n","      <th>id_uf</th>\n","      <th>id_situacao_domicilio</th>\n","      <th>idade</th>\n","      <th>id_sexo</th>\n","      <th>id_cor_raca</th>\n","      <th>id_escolaridade</th>\n","      <th>id_febre</th>\n","      <th>...</th>\n","      <th>id_hipertensao</th>\n","      <th>id_doencarespiratoria</th>\n","      <th>id_doencacoracao</th>\n","      <th>id_depressao</th>\n","      <th>id_cancer</th>\n","      <th>id_afastamento_temporario</th>\n","      <th>id_motivo_afastamento_temporario</th>\n","      <th>id_tipo_contrato_trabalho</th>\n","      <th>id_ramo_atividade_empresa</th>\n","      <th>id_sintomas_conjugados</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2020</td>\n","      <td>8</td>\n","      <td>3</td>\n","      <td>16</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>...</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2020</td>\n","      <td>8</td>\n","      <td>3</td>\n","      <td>50</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>...</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2020</td>\n","      <td>8</td>\n","      <td>1</td>\n","      <td>31</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>...</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2020</td>\n","      <td>7</td>\n","      <td>3</td>\n","      <td>15</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>...</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2020</td>\n","      <td>7</td>\n","      <td>3</td>\n","      <td>51</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>...</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 49 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d297d673-7ebb-4d80-b091-f64c0bbfe181')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d297d673-7ebb-4d80-b091-f64c0bbfe181 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d297d673-7ebb-4d80-b091-f64c0bbfe181');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b47a4454-ee2d-4043-9c35-291b70e433c7\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b47a4454-ee2d-4043-9c35-291b70e433c7')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b47a4454-ee2d-4043-9c35-291b70e433c7 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"fato"}},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":[],"metadata":{"id":"NdmBEhT9muQg","executionInfo":{"status":"ok","timestamp":1710867514418,"user_tz":180,"elapsed":3,"user":{"displayName":"Victor DEV","userId":"12673627971948178805"}}},"execution_count":13,"outputs":[]},{"cell_type":"markdown","source":["###DIMENSÃO ESCOLARIDADE"],"metadata":{"id":"WGPOj3e-sImD"}},{"cell_type":"code","source":["table_ref=dataset_ref.table('DimPopulacaoEscolaridade')\n","table=client.get_table(table_ref)\n","dim_escolaridade=client.list_rows(table).to_dataframe()"],"metadata":{"id":"l2TVt7HpsL8P","executionInfo":{"status":"ok","timestamp":1710867516386,"user_tz":180,"elapsed":1971,"user":{"displayName":"Victor DEV","userId":"12673627971948178805"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["dim_escolaridade.info()"],"metadata":{"id":"sCuPYb0dsQ7Z","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1710867516386,"user_tz":180,"elapsed":4,"user":{"displayName":"Victor DEV","userId":"12673627971948178805"}},"outputId":"081a542a-76ca-4452-ee64-43a78487ada5"},"execution_count":15,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 8 entries, 0 to 7\n","Data columns (total 2 columns):\n"," #   Column             Non-Null Count  Dtype \n","---  ------             --------------  ----- \n"," 0   id_escolaridade    8 non-null      Int64 \n"," 1   nome_escolaridade  8 non-null      object\n","dtypes: Int64(1), object(1)\n","memory usage: 264.0+ bytes\n"]}]},{"cell_type":"code","source":["dim_escolaridade"],"metadata":{"id":"Yu-h24QUsTWG","colab":{"base_uri":"https://localhost:8080/","height":300},"executionInfo":{"status":"ok","timestamp":1710867516386,"user_tz":180,"elapsed":3,"user":{"displayName":"Victor DEV","userId":"12673627971948178805"}},"outputId":"dd5ad379-dabb-4c60-fafa-bf20fe2f24f4"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   id_escolaridade                     nome_escolaridade\n","0                1                         Sem instrucao\n","1                5                        Médio completo\n","2                6                   Superior incompleto\n","3                3                  Fundamental completa\n","4                7                     Superior completo\n","5                4                      Médio incompleto\n","6                2                Fundamental incompleto\n","7                8  Pós-graduação, mestrado ou doutorado"],"text/html":["\n","  <div id=\"df-832c5033-5369-42e6-a33a-74170651cbca\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id_escolaridade</th>\n","      <th>nome_escolaridade</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>Sem instrucao</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>5</td>\n","      <td>Médio completo</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>6</td>\n","      <td>Superior incompleto</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>Fundamental completa</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>7</td>\n","      <td>Superior completo</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>4</td>\n","      <td>Médio incompleto</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>2</td>\n","      <td>Fundamental incompleto</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>8</td>\n","      <td>Pós-graduação, mestrado ou doutorado</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-832c5033-5369-42e6-a33a-74170651cbca')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-832c5033-5369-42e6-a33a-74170651cbca button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-832c5033-5369-42e6-a33a-74170651cbca');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-6b247196-37d9-4ed2-b29d-05175ac25f84\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6b247196-37d9-4ed2-b29d-05175ac25f84')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-6b247196-37d9-4ed2-b29d-05175ac25f84 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_1c5d08e5-41ed-4ed3-97b5-a068a0952f5c\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('dim_escolaridade')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_1c5d08e5-41ed-4ed3-97b5-a068a0952f5c button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('dim_escolaridade');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"dim_escolaridade","summary":"{\n  \"name\": \"dim_escolaridade\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"id_escolaridade\",\n      \"properties\": {\n        \"dtype\": \"Int64\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          \"5\",\n          \"4\",\n          \"1\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"nome_escolaridade\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          \"M\\u00e9dio completo\",\n          \"M\\u00e9dio incompleto\",\n          \"Sem instrucao\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":16}]},{"cell_type":"markdown","source":["###DIMENSÃO ETNIA"],"metadata":{"id":"hsKu7hz9u7wz"}},{"cell_type":"code","source":["table_ref=dataset_ref.table('DimPopulacaoCorRaca')\n","table=client.get_table(table_ref)\n","dim_corraca=client.list_rows(table).to_dataframe()"],"metadata":{"id":"uXy90Qi6u7w5","executionInfo":{"status":"ok","timestamp":1710867518156,"user_tz":180,"elapsed":1772,"user":{"displayName":"Victor DEV","userId":"12673627971948178805"}}},"execution_count":17,"outputs":[]},{"cell_type":"code","source":["dim_corraca.info()"],"metadata":{"id":"insPXpu-u7w5","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1710867518156,"user_tz":180,"elapsed":5,"user":{"displayName":"Victor DEV","userId":"12673627971948178805"}},"outputId":"20a15efe-615a-4708-fda1-fd3e60a7c6b0"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 6 entries, 0 to 5\n","Data columns (total 2 columns):\n"," #   Column         Non-Null Count  Dtype \n","---  ------         --------------  ----- \n"," 0   id_cor_raca    6 non-null      Int64 \n"," 1   nome_cor_raca  6 non-null      object\n","dtypes: Int64(1), object(1)\n","memory usage: 230.0+ bytes\n"]}]},{"cell_type":"code","source":["dim_corraca"],"metadata":{"id":"cB67dvDuu7w5","colab":{"base_uri":"https://localhost:8080/","height":0},"executionInfo":{"status":"ok","timestamp":1710867518156,"user_tz":180,"elapsed":3,"user":{"displayName":"Victor DEV","userId":"12673627971948178805"}},"outputId":"1c7c0d67-37f9-4711-9a1f-276ff770ac46"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   id_cor_raca nome_cor_raca\n","0            3       Amarela\n","1            1        Branca\n","2            4         Parda\n","3            2         Preta\n","4            5      Indígena\n","5            9      Ignorado"],"text/html":["\n","  <div id=\"df-f23191e3-fcaf-4500-85fe-327df917e15e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id_cor_raca</th>\n","      <th>nome_cor_raca</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>3</td>\n","      <td>Amarela</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>Branca</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>4</td>\n","      <td>Parda</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2</td>\n","      <td>Preta</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>Indígena</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>9</td>\n","      <td>Ignorado</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f23191e3-fcaf-4500-85fe-327df917e15e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f23191e3-fcaf-4500-85fe-327df917e15e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f23191e3-fcaf-4500-85fe-327df917e15e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b033c74b-03b2-46e6-89d7-4ead89cd1846\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b033c74b-03b2-46e6-89d7-4ead89cd1846')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b033c74b-03b2-46e6-89d7-4ead89cd1846 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_6f446546-0112-41ee-8d5f-bb2c14ce47c4\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('dim_corraca')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_6f446546-0112-41ee-8d5f-bb2c14ce47c4 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('dim_corraca');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"dim_corraca","summary":"{\n  \"name\": \"dim_corraca\",\n  \"rows\": 6,\n  \"fields\": [\n    {\n      \"column\": \"id_cor_raca\",\n      \"properties\": {\n        \"dtype\": \"Int64\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"3\",\n          \"1\",\n          \"9\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"nome_cor_raca\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Amarela\",\n          \"Branca\",\n          \"Ignorado\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":19}]},{"cell_type":"markdown","source":["###DIMENSÃO ResultadoTesteCovid"],"metadata":{"id":"PNGX4wtPw6D4"}},{"cell_type":"code","source":["table_ref=dataset_ref.table('DimSaudeResultadoTeste')\n","table=client.get_table(table_ref)\n","dim_resulteste=client.list_rows(table).to_dataframe()"],"metadata":{"id":"PUQ5be_Fw6D-","executionInfo":{"status":"ok","timestamp":1710867520620,"user_tz":180,"elapsed":2466,"user":{"displayName":"Victor DEV","userId":"12673627971948178805"}}},"execution_count":20,"outputs":[]},{"cell_type":"code","source":["dim_resulteste.info()"],"metadata":{"id":"Ek_kCx8dw6D-","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1710867520620,"user_tz":180,"elapsed":5,"user":{"displayName":"Victor DEV","userId":"12673627971948178805"}},"outputId":"5c0c3893-581f-402e-c95e-ae1cef5b8dc9"},"execution_count":21,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 6 entries, 0 to 5\n","Data columns (total 2 columns):\n"," #   Column             Non-Null Count  Dtype \n","---  ------             --------------  ----- \n"," 0   id_resultadoteste  6 non-null      Int64 \n"," 1   resultado_teste    6 non-null      object\n","dtypes: Int64(1), object(1)\n","memory usage: 230.0+ bytes\n"]}]},{"cell_type":"code","source":["dim_resulteste"],"metadata":{"id":"b8cMdVOTw6D-","colab":{"base_uri":"https://localhost:8080/","height":0},"executionInfo":{"status":"ok","timestamp":1710867520620,"user_tz":180,"elapsed":3,"user":{"displayName":"Victor DEV","userId":"12673627971948178805"}},"outputId":"e96d0331-2820-463e-c16a-d720030baab8"},"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   id_resultadoteste                resultado_teste\n","0                  9                       Ignorado\n","1                  3                   Inconclusivo\n","2                  4  Ainda não recebeu o resultado\n","3                  2                       Negativo\n","4                  0                  Não aplicável\n","5                  1                       Positivo"],"text/html":["\n","  <div id=\"df-c627cd6d-49c3-4b46-9ebf-0c61cd274278\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id_resultadoteste</th>\n","      <th>resultado_teste</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>9</td>\n","      <td>Ignorado</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>3</td>\n","      <td>Inconclusivo</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>4</td>\n","      <td>Ainda não recebeu o resultado</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2</td>\n","      <td>Negativo</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>Não aplicável</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>1</td>\n","      <td>Positivo</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c627cd6d-49c3-4b46-9ebf-0c61cd274278')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c627cd6d-49c3-4b46-9ebf-0c61cd274278 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c627cd6d-49c3-4b46-9ebf-0c61cd274278');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-334aed36-78bb-4bd0-b217-cf42d012e70e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-334aed36-78bb-4bd0-b217-cf42d012e70e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-334aed36-78bb-4bd0-b217-cf42d012e70e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_bea331bc-7e5b-40c2-9630-32418c7ca606\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('dim_resulteste')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_bea331bc-7e5b-40c2-9630-32418c7ca606 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('dim_resulteste');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"dim_resulteste","summary":"{\n  \"name\": \"dim_resulteste\",\n  \"rows\": 6,\n  \"fields\": [\n    {\n      \"column\": \"id_resultadoteste\",\n      \"properties\": {\n        \"dtype\": \"Int64\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"9\",\n          \"3\",\n          \"1\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"resultado_teste\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Ignorado\",\n          \"Inconclusivo\",\n          \"Positivo\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":22}]},{"cell_type":"markdown","source":["###DIMENSÃO DimTrabalhoMotivoAfastamentoTemporario"],"metadata":{"id":"kMFu9gT4xN-4"}},{"cell_type":"code","source":["table_ref=dataset_ref.table('DimTrabalhoMotivoAfastamentoTemporario')\n","table=client.get_table(table_ref)\n","dim_trabalhoafastamento=client.list_rows(table).to_dataframe()"],"metadata":{"id":"v4GV5MP8xN--","executionInfo":{"status":"ok","timestamp":1710867522609,"user_tz":180,"elapsed":1991,"user":{"displayName":"Victor DEV","userId":"12673627971948178805"}}},"execution_count":23,"outputs":[]},{"cell_type":"code","source":["dim_trabalhoafastamento.info()"],"metadata":{"id":"6F35ElqjxN--","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1710867522610,"user_tz":180,"elapsed":4,"user":{"displayName":"Victor DEV","userId":"12673627971948178805"}},"outputId":"a3e1890e-d32a-45e9-93ca-a14df9752a38"},"execution_count":24,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 9 entries, 0 to 8\n","Data columns (total 2 columns):\n"," #   Column                              Non-Null Count  Dtype \n","---  ------                              --------------  ----- \n"," 0   id_motivo_afastamento_temporario    9 non-null      Int64 \n"," 1   nome_motivo_afastamento_temporario  9 non-null      object\n","dtypes: Int64(1), object(1)\n","memory usage: 281.0+ bytes\n"]}]},{"cell_type":"code","source":["dim_trabalhoafastamento"],"metadata":{"id":"6FphQjcixN--","colab":{"base_uri":"https://localhost:8080/","height":332},"executionInfo":{"status":"ok","timestamp":1710867522610,"user_tz":180,"elapsed":3,"user":{"displayName":"Victor DEV","userId":"12673627971948178805"}},"outputId":"03e7bc43-6a57-4336-9f74-da80a6ba6fe1"},"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   id_motivo_afastamento_temporario  \\\n","0                                 4   \n","1                                 2   \n","2                                 6   \n","3                                 1   \n","4                                 8   \n","5                                 0   \n","6                                 3   \n","7                                 7   \n","8                                 5   \n","\n","                  nome_motivo_afastamento_temporario  \n","0  Licença remunerada por motivo de saúde ou acid...  \n","1      Férias, folga ou jornada de trabalho variável  \n","2  Afastamento do próprio negócio/empresa por mot...  \n","3  Estava em quarentena, isolamento, distanciamen...  \n","4                                       Outro motivo  \n","5                                        Não Mapeado  \n","6                 Licença maternidade ou paternidade  \n","7  Fatores ocasionais (mau tempo, paralisação nos...  \n","8  Outro tipo de licença remunerada (estudo, pate...  "],"text/html":["\n","  <div id=\"df-2474a442-599b-4c4d-8171-edde71039c4e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id_motivo_afastamento_temporario</th>\n","      <th>nome_motivo_afastamento_temporario</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>4</td>\n","      <td>Licença remunerada por motivo de saúde ou acid...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>Férias, folga ou jornada de trabalho variável</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>6</td>\n","      <td>Afastamento do próprio negócio/empresa por mot...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>Estava em quarentena, isolamento, distanciamen...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>8</td>\n","      <td>Outro motivo</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>0</td>\n","      <td>Não Mapeado</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>3</td>\n","      <td>Licença maternidade ou paternidade</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>7</td>\n","      <td>Fatores ocasionais (mau tempo, paralisação nos...</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>5</td>\n","      <td>Outro tipo de licença remunerada (estudo, pate...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2474a442-599b-4c4d-8171-edde71039c4e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-2474a442-599b-4c4d-8171-edde71039c4e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-2474a442-599b-4c4d-8171-edde71039c4e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-fbe74737-467f-4a33-bd06-cde066122f6f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fbe74737-467f-4a33-bd06-cde066122f6f')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-fbe74737-467f-4a33-bd06-cde066122f6f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_9387e431-df05-4238-b79c-aa220753ef51\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('dim_trabalhoafastamento')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_9387e431-df05-4238-b79c-aa220753ef51 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('dim_trabalhoafastamento');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"dim_trabalhoafastamento","summary":"{\n  \"name\": \"dim_trabalhoafastamento\",\n  \"rows\": 9,\n  \"fields\": [\n    {\n      \"column\": \"id_motivo_afastamento_temporario\",\n      \"properties\": {\n        \"dtype\": \"Int64\",\n        \"num_unique_values\": 9,\n        \"samples\": [\n          \"7\",\n          \"2\",\n          \"0\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"nome_motivo_afastamento_temporario\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 9,\n        \"samples\": [\n          \"Fatores ocasionais (mau tempo, paralisa\\u00e7\\u00e3o nos servi\\u00e7os de transportes, etc.)\",\n          \"F\\u00e9rias, folga ou jornada de trabalho vari\\u00e1vel\",\n          \"N\\u00e3o Mapeado\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":25}]},{"cell_type":"markdown","source":[],"metadata":{"id":"fHMcRSpNxnE4"}},{"cell_type":"markdown","source":["###DIMENSÃO TipoTesteCovid\n"],"metadata":{"id":"GHCNDVjw2GNG"}},{"cell_type":"code","source":["table_ref=dataset_ref.table('DimSaudeTipoTeste')\n","table=client.get_table(table_ref)\n","dim_tipoteste=client.list_rows(table).to_dataframe()"],"metadata":{"id":"MhuR9KQ92GNL","executionInfo":{"status":"ok","timestamp":1710867524016,"user_tz":180,"elapsed":1408,"user":{"displayName":"Victor DEV","userId":"12673627971948178805"}}},"execution_count":26,"outputs":[]},{"cell_type":"code","source":["dim_tipoteste.info()"],"metadata":{"id":"4IbyGi7O2GNL","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1710867524016,"user_tz":180,"elapsed":5,"user":{"displayName":"Victor DEV","userId":"12673627971948178805"}},"outputId":"ec4861f8-36c9-4363-cc4b-53ef2b67cad4"},"execution_count":27,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 4 entries, 0 to 3\n","Data columns (total 2 columns):\n"," #   Column           Non-Null Count  Dtype \n","---  ------           --------------  ----- \n"," 0   id_testecovid    4 non-null      Int64 \n"," 1   nome_testecovid  4 non-null      object\n","dtypes: Int64(1), object(1)\n","memory usage: 196.0+ bytes\n"]}]},{"cell_type":"code","source":["dim_tipoteste"],"metadata":{"id":"s58Ojc_72GNL","colab":{"base_uri":"https://localhost:8080/","height":175},"executionInfo":{"status":"ok","timestamp":1710867524017,"user_tz":180,"elapsed":4,"user":{"displayName":"Victor DEV","userId":"12673627971948178805"}},"outputId":"a6e8fede-0f8c-40eb-cd2a-00f7fdfd534f"},"execution_count":28,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   id_testecovid nome_testecovid\n","0              3            Veia\n","1              1            SWAB\n","2              0    Não realizou\n","3              2            Dedo"],"text/html":["\n","  <div id=\"df-94781b73-65c0-4fb0-be84-56c04e98e1c1\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id_testecovid</th>\n","      <th>nome_testecovid</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>3</td>\n","      <td>Veia</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>SWAB</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>Não realizou</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2</td>\n","      <td>Dedo</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-94781b73-65c0-4fb0-be84-56c04e98e1c1')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-94781b73-65c0-4fb0-be84-56c04e98e1c1 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-94781b73-65c0-4fb0-be84-56c04e98e1c1');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-13ba8f69-f4d0-49b1-8a98-79033d257241\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-13ba8f69-f4d0-49b1-8a98-79033d257241')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-13ba8f69-f4d0-49b1-8a98-79033d257241 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_b4b39d88-9e33-4a6d-a192-505620448d59\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('dim_tipoteste')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_b4b39d88-9e33-4a6d-a192-505620448d59 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('dim_tipoteste');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"dim_tipoteste","summary":"{\n  \"name\": \"dim_tipoteste\",\n  \"rows\": 4,\n  \"fields\": [\n    {\n      \"column\": \"id_testecovid\",\n      \"properties\": {\n        \"dtype\": \"Int64\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"1\",\n          \"2\",\n          \"3\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"nome_testecovid\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"SWAB\",\n          \"Dedo\",\n          \"Veia\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":28}]},{"cell_type":"markdown","source":[],"metadata":{"id":"bR6dw2Yi2vWZ"}},{"cell_type":"markdown","source":[],"metadata":{"id":"m5nQsxLd2GNL"}},{"cell_type":"markdown","source":["##GERANDO VISUALIZAÇÕES"],"metadata":{"id":"QDkHn0orxxEG"}},{"cell_type":"markdown","source":["###Q17 - Qual a distribuição por escolaridade das pessoas que precisaram se afastar do trabalho?"],"metadata":{"id":"Ufici43l3DxP"}},{"cell_type":"code","source":["dim_trabalhoafastamento"],"metadata":{"id":"Hjq09zsm7fXf","colab":{"base_uri":"https://localhost:8080/","height":332},"executionInfo":{"status":"ok","timestamp":1710867552676,"user_tz":180,"elapsed":873,"user":{"displayName":"Victor DEV","userId":"12673627971948178805"}},"outputId":"9b45105e-816d-46fe-e9ab-71a9e8bf146a"},"execution_count":29,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   id_motivo_afastamento_temporario  \\\n","0                                 4   \n","1                                 2   \n","2                                 6   \n","3                                 1   \n","4                                 8   \n","5                                 0   \n","6                                 3   \n","7                                 7   \n","8                                 5   \n","\n","                  nome_motivo_afastamento_temporario  \n","0  Licença remunerada por motivo de saúde ou acid...  \n","1      Férias, folga ou jornada de trabalho variável  \n","2  Afastamento do próprio negócio/empresa por mot...  \n","3  Estava em quarentena, isolamento, distanciamen...  \n","4                                       Outro motivo  \n","5                                        Não Mapeado  \n","6                 Licença maternidade ou paternidade  \n","7  Fatores ocasionais (mau tempo, paralisação nos...  \n","8  Outro tipo de licença remunerada (estudo, pate...  "],"text/html":["\n","  <div id=\"df-4d680704-7e09-4cf6-9fa6-ab58ec4068e5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id_motivo_afastamento_temporario</th>\n","      <th>nome_motivo_afastamento_temporario</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>4</td>\n","      <td>Licença remunerada por motivo de saúde ou acid...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>Férias, folga ou jornada de trabalho variável</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>6</td>\n","      <td>Afastamento do próprio negócio/empresa por mot...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>Estava em quarentena, isolamento, distanciamen...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>8</td>\n","      <td>Outro motivo</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>0</td>\n","      <td>Não Mapeado</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>3</td>\n","      <td>Licença maternidade ou paternidade</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>7</td>\n","      <td>Fatores ocasionais (mau tempo, paralisação nos...</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>5</td>\n","      <td>Outro tipo de licença remunerada (estudo, pate...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4d680704-7e09-4cf6-9fa6-ab58ec4068e5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4d680704-7e09-4cf6-9fa6-ab58ec4068e5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4d680704-7e09-4cf6-9fa6-ab58ec4068e5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f9309387-a30e-4b16-bdc5-923990b5d7ca\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f9309387-a30e-4b16-bdc5-923990b5d7ca')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f9309387-a30e-4b16-bdc5-923990b5d7ca button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_ec46ab60-3754-4ac5-be87-f362746705f1\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('dim_trabalhoafastamento')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_ec46ab60-3754-4ac5-be87-f362746705f1 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('dim_trabalhoafastamento');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"dim_trabalhoafastamento","summary":"{\n  \"name\": \"dim_trabalhoafastamento\",\n  \"rows\": 9,\n  \"fields\": [\n    {\n      \"column\": \"id_motivo_afastamento_temporario\",\n      \"properties\": {\n        \"dtype\": \"Int64\",\n        \"num_unique_values\": 9,\n        \"samples\": [\n          \"7\",\n          \"2\",\n          \"0\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"nome_motivo_afastamento_temporario\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 9,\n        \"samples\": [\n          \"Fatores ocasionais (mau tempo, paralisa\\u00e7\\u00e3o nos servi\\u00e7os de transportes, etc.)\",\n          \"F\\u00e9rias, folga ou jornada de trabalho vari\\u00e1vel\",\n          \"N\\u00e3o Mapeado\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":29}]},{"cell_type":"markdown","source":["Vamos analisar apenas os casos 1 e 7, que representam afastamentos possivelmente causados pela COVID"],"metadata":{"id":"IjyzanpN7XdE"}},{"cell_type":"code","source":["q17_raw = fato_raw.select(fato_raw.id_motivo_afastamento_temporario,fato_raw.id_escolaridade)\n","\n","q17_iso = q17_raw.filter(\"id_motivo_afastamento_temporario = 1\")\\\n","                 .groupBy(\"id_escolaridade\")\\\n","                 .count()\\\n","                 .withColumnRenamed(\"count\", \"total\")\n","\n","q17iso_pd = q17_iso.toPandas()\n","\n","q17iso_pd = pd.merge(q17iso_pd, dim_escolaridade, on='id_escolaridade', how='inner')"],"metadata":{"id":"oiky_xs73PZI","executionInfo":{"status":"ok","timestamp":1710867993213,"user_tz":180,"elapsed":17176,"user":{"displayName":"Victor DEV","userId":"12673627971948178805"}}},"execution_count":31,"outputs":[]},{"cell_type":"code","source":["q17iso_pd"],"metadata":{"id":"eovXTbWw6QXC","colab":{"base_uri":"https://localhost:8080/","height":300},"executionInfo":{"status":"ok","timestamp":1710868000967,"user_tz":180,"elapsed":535,"user":{"displayName":"Victor DEV","userId":"12673627971948178805"}},"outputId":"4313af0a-7dd3-48c2-f43c-292351e5e9ef"},"execution_count":32,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   id_escolaridade  total                     nome_escolaridade\n","0                7   6753                     Superior completo\n","1                6   3250                   Superior incompleto\n","2                5  14124                        Médio completo\n","3                1    676                         Sem instrucao\n","4                3   3337                  Fundamental completa\n","5                8   1600  Pós-graduação, mestrado ou doutorado\n","6                2   8330                Fundamental incompleto\n","7                4   3677                      Médio incompleto"],"text/html":["\n","  <div id=\"df-f3497fec-6fb3-4f1f-a0c5-458ad4739dd1\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id_escolaridade</th>\n","      <th>total</th>\n","      <th>nome_escolaridade</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>7</td>\n","      <td>6753</td>\n","      <td>Superior completo</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>6</td>\n","      <td>3250</td>\n","      <td>Superior incompleto</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>5</td>\n","      <td>14124</td>\n","      <td>Médio completo</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>676</td>\n","      <td>Sem instrucao</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>3</td>\n","      <td>3337</td>\n","      <td>Fundamental completa</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>8</td>\n","      <td>1600</td>\n","      <td>Pós-graduação, mestrado ou doutorado</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>2</td>\n","      <td>8330</td>\n","      <td>Fundamental incompleto</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>4</td>\n","      <td>3677</td>\n","      <td>Médio incompleto</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f3497fec-6fb3-4f1f-a0c5-458ad4739dd1')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f3497fec-6fb3-4f1f-a0c5-458ad4739dd1 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f3497fec-6fb3-4f1f-a0c5-458ad4739dd1');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d5f71644-90b7-47f2-a3f9-ec25ef1b4352\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d5f71644-90b7-47f2-a3f9-ec25ef1b4352')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d5f71644-90b7-47f2-a3f9-ec25ef1b4352 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_120ca43c-b1a4-4bd7-a9aa-247d2678027f\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('q17iso_pd')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_120ca43c-b1a4-4bd7-a9aa-247d2678027f button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('q17iso_pd');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"q17iso_pd","summary":"{\n  \"name\": \"q17iso_pd\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"id_escolaridade\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 1,\n        \"max\": 8,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          6,\n          8,\n          7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"total\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4389,\n        \"min\": 676,\n        \"max\": 14124,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          3250,\n          1600,\n          6753\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"nome_escolaridade\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          \"Superior incompleto\",\n          \"P\\u00f3s-gradua\\u00e7\\u00e3o, mestrado ou doutorado\",\n          \"Superior completo\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":32}]},{"cell_type":"code","source":["# Ordenando os dados pelo total, para uma visualização mais informativa\n","q17iso_pd_sorted = q17iso_pd.sort_values(by='total', ascending=True)\n","\n","# Gerando o gráfico de barras\n","plt.figure(figsize=(14, 6))  # Ajuste o tamanho conforme necessário\n","bars = plt.barh(q17iso_pd_sorted['nome_escolaridade'], q17iso_pd_sorted['total'], color='skyblue')  # Barra horizontal\n","plt.xlabel('Total de Afastamentos')  # Rótulo do eixo X\n","plt.ylabel('Escolaridade')  # Rótulo do eixo Y\n","plt.title('Afastamentos do Trabalho por conta de quarentena, isolamento social ou férias coletivas por Escolaridade Durante a Pandemia de COVID-19')  # Título do gráfico\n","\n","# Adicionando os valores numéricos em cada barra\n","for bar in bars:\n","    plt.text(bar.get_width(), bar.get_y() + bar.get_height() / 2, '{:,}'.format(int(bar.get_width())),\n","             va='center', ha='left', fontsize=10, color='black')\n","\n","plt.tight_layout()\n","\n","# Exibindo o gráfico\n","plt.show()"],"metadata":{"id":"KL8QZSUZ6mu1","colab":{"base_uri":"https://localhost:8080/","height":607},"executionInfo":{"status":"ok","timestamp":1710868007881,"user_tz":180,"elapsed":1466,"user":{"displayName":"Victor DEV","userId":"12673627971948178805"}},"outputId":"73eccaa2-d3f6-4666-fbb8-b264edfe7525"},"execution_count":33,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1400x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["q17_raw = fato_raw.select(fato_raw.id_motivo_afastamento_temporario,fato_raw.id_escolaridade)\n","\n","q17_outros = q17_raw.filter(\"id_motivo_afastamento_temporario = 7\")\\\n","                 .groupBy(\"id_escolaridade\")\\\n","                 .count()\\\n","                 .withColumnRenamed(\"count\", \"total\")\n","\n","q17outros_pd = q17_outros.toPandas()\n","\n","q17outros_pd = pd.merge(q17outros_pd, dim_escolaridade, on='id_escolaridade', how='inner')"],"metadata":{"id":"ZHBs9SHP719M","executionInfo":{"status":"ok","timestamp":1710868043825,"user_tz":180,"elapsed":10205,"user":{"displayName":"Victor DEV","userId":"12673627971948178805"}}},"execution_count":34,"outputs":[]},{"cell_type":"code","source":["# Ordenando os dados pelo total, para uma visualização mais informativa\n","q18iso_pd_sorted = q17outros_pd.sort_values(by='total', ascending=True)\n","\n","# Gerando o gráfico de barras\n","plt.figure(figsize=(14, 6))  # Ajuste o tamanho conforme necessário\n","bars = plt.barh(q18iso_pd_sorted['nome_escolaridade'], q18iso_pd_sorted['total'], color='skyblue')  # Barra horizontal\n","plt.xlabel('Total de Afastamentos')  # Rótulo do eixo X\n","plt.ylabel('Escolaridade')  # Rótulo do eixo Y\n","plt.title('Afastamentos do Trabalho por conta paralizações no transporte e outros fatores')  # Título do gráfico\n","\n","# Adicionando os valores numéricos em cada barra\n","for bar in bars:\n","    plt.text(bar.get_width(), bar.get_y() + bar.get_height() / 2, '{:,}'.format(int(bar.get_width())),\n","             va='center', ha='left', fontsize=10, color='black')\n","\n","plt.tight_layout()\n","\n","# Exibindo o gráfico\n","plt.show()"],"metadata":{"id":"o8QFF1yN74sy","colab":{"base_uri":"https://localhost:8080/","height":607},"executionInfo":{"status":"ok","timestamp":1710870876757,"user_tz":180,"elapsed":585,"user":{"displayName":"Victor DEV","userId":"12673627971948178805"}},"outputId":"c2030b9e-9e7f-49c0-b54d-b3f6e7b0911d"},"execution_count":48,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1400x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["###Q18 - Qual a distribuição etnica das pessoas que contraíram o COVID?"],"metadata":{"id":"54JmOebzyKk7"}},{"cell_type":"code","source":["q18_raw = fato_raw.select(fato_raw.id_resultadoteste,fato_raw.id_cor_raca)"],"metadata":{"id":"ziqhcp-NW0fo","executionInfo":{"status":"ok","timestamp":1710868046152,"user_tz":180,"elapsed":2,"user":{"displayName":"Victor DEV","userId":"12673627971948178805"}}},"execution_count":36,"outputs":[]},{"cell_type":"code","source":["q18 = q18_raw.filter(\"id_resultadoteste = 1\")\\\n","                 .groupBy(\"id_cor_raca\")\\\n","                 .count()\\\n","                 .withColumnRenamed(\"count\", \"total\")"],"metadata":{"id":"smi6vV0djZGe","executionInfo":{"status":"ok","timestamp":1710868046152,"user_tz":180,"elapsed":2,"user":{"displayName":"Victor DEV","userId":"12673627971948178805"}}},"execution_count":37,"outputs":[]},{"cell_type":"code","source":["q18_pd = q18.toPandas()"],"metadata":{"id":"rzf64EpPmYDa","executionInfo":{"status":"ok","timestamp":1710868055777,"user_tz":180,"elapsed":9626,"user":{"displayName":"Victor DEV","userId":"12673627971948178805"}}},"execution_count":38,"outputs":[]},{"cell_type":"code","source":["q18_pd = pd.merge(q18_pd, dim_corraca, on='id_cor_raca', how='inner')"],"metadata":{"id":"obIzmw6JqlXp","executionInfo":{"status":"ok","timestamp":1710868055777,"user_tz":180,"elapsed":4,"user":{"displayName":"Victor DEV","userId":"12673627971948178805"}}},"execution_count":39,"outputs":[]},{"cell_type":"code","source":["q18_pd"],"metadata":{"id":"VP58bn2V56av","colab":{"base_uri":"https://localhost:8080/","height":238},"executionInfo":{"status":"ok","timestamp":1710868055777,"user_tz":180,"elapsed":4,"user":{"displayName":"Victor DEV","userId":"12673627971948178805"}},"outputId":"cf4297b2-7092-4b04-a262-7b473966ded2"},"execution_count":40,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   id_cor_raca  total nome_cor_raca\n","0            9     12      Ignorado\n","1            5    203      Indígena\n","2            1   8531        Branca\n","3            3    106       Amarela\n","4            2   1934         Preta\n","5            4  11699         Parda"],"text/html":["\n","  <div id=\"df-1447272d-7cd0-4b83-809b-881974338621\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id_cor_raca</th>\n","      <th>total</th>\n","      <th>nome_cor_raca</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>9</td>\n","      <td>12</td>\n","      <td>Ignorado</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>5</td>\n","      <td>203</td>\n","      <td>Indígena</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>8531</td>\n","      <td>Branca</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>106</td>\n","      <td>Amarela</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2</td>\n","      <td>1934</td>\n","      <td>Preta</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>4</td>\n","      <td>11699</td>\n","      <td>Parda</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1447272d-7cd0-4b83-809b-881974338621')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1447272d-7cd0-4b83-809b-881974338621 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1447272d-7cd0-4b83-809b-881974338621');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-207dec7b-c876-49bf-b643-cc82dff9eb11\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-207dec7b-c876-49bf-b643-cc82dff9eb11')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-207dec7b-c876-49bf-b643-cc82dff9eb11 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_ea21d40d-5367-40e0-96a5-9699cde0bd11\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('q18_pd')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_ea21d40d-5367-40e0-96a5-9699cde0bd11 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('q18_pd');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"q18_pd","summary":"{\n  \"name\": \"q18_pd\",\n  \"rows\": 6,\n  \"fields\": [\n    {\n      \"column\": \"id_cor_raca\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 1,\n        \"max\": 9,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          9,\n          5,\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"total\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5082,\n        \"min\": 12,\n        \"max\": 11699,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          12,\n          203,\n          11699\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"nome_cor_raca\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Ignorado\",\n          \"Ind\\u00edgena\",\n          \"Parda\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":40}]},{"cell_type":"code","source":["plt.figure(figsize=(10, 7))\n","q18_plot = q18_pd.sort_values(by='total', ascending=False)\n","bars = plt.bar(q18_plot['nome_cor_raca'], q18_plot['total'], color='skyblue')\n","\n","for bar in bars:\n","    height = bar.get_height()\n","    plt.annotate(f'{int(height)}',\n","                 xy=(bar.get_x() + bar.get_width() / 2, height),\n","                 xytext=(0, 3),\n","                 textcoords=\"offset points\",\n","                 ha='center', va='bottom')\n","\n","plt.xlabel('Cor-Raça')\n","plt.ylabel('Número de pessoas')\n","plt.title('Distribuição Étnica de pessoas que contraíram COVID')\n","plt.xticks(rotation=45)\n","\n","plt.show()"],"metadata":{"id":"JqFdemrXq1eN","colab":{"base_uri":"https://localhost:8080/","height":683},"executionInfo":{"status":"ok","timestamp":1710870947672,"user_tz":180,"elapsed":1220,"user":{"displayName":"Victor DEV","userId":"12673627971948178805"}},"outputId":"e0d88a53-6839-424a-b648-59a97f46bbc9"},"execution_count":49,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x700 with 1 Axes>"],"image/png":"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/Jd9duLECT3zzDOKjo5WWFiYihYtquPHj2vevHmKi4uTm5tbqo+vjz76SC4uLnrrrbcUExOjESNGqHXr1tqwYYMk6b333lNMTIz+/vtvjRkzRtK1AXWuN3ToULm5uemtt95SfHy83NzctHfvXi1cuFAvvPCCQkJCFBUVpc8++0xVqlTR3r17nS4vvpGrV6+qVq1aqlixokaNGmV9fsydO1dxcXF67bXXlD17dm3cuFETJkzQ33//rblz5zotIzExUXXq1FHlypU1YsQIffPNN+ratau8vLz03nvvqXXr1mrSpIkmT56sNm3aKDQ0VCEhITetafHixZKu/R24nbi4OK1atUqVKlW66TJffPFFhYWFKTw8XH369JGXl5caNWqkefPm6ezZs/L397fazp49W4mJiVYwvVsvv/yyPv/8c61YsULPPffcf1oWYBsDIF2bOnWqkWQ2bdp00za+vr7mySeftJ4PHDjQXP/xMGbMGCPJnDp16qbL2LRpk5Fkpk6dmmJelSpVjCQzefLkG86rUqWK9fynn34ykswjjzxiYmNjrelz5swxksy4ceOsafny5TNt27a97TIPHz6corbKlSubrFmzmiNHjji9Nikpyfo5Li4uxbIjIiKMJDNjxgxrWo8ePYwk88svv1jTzp8/b0JCQkz+/PlNYmJiiuVcL1++fEbSDR/Dhg2z2nXp0sXc6GM7efuyZ89uzp49a01ftGiRkWS+//57a9q/9+2BAweMi4uLef7551PUebvfRefOnU2WLFnM5cuXb7l9jRs3Nh4eHk6/671795pMmTI51fLXX3+ZTJkymQ8++MDp9bt27TKurq4ppv9b8rY1bNjQafrrr79uJJkdO3akaj3btm0zkszcuXNvus47OTbGjh1rJJmvv/7amnblyhUTGhpqvL29nd7n//49X7lyxTz22GPm2WefTdU6b2T79u1Gknn99dedprdq1cpIMgMHDrSmtW3b1uTLly/FMv79/vmv+6xNmzbGxcXlhp9Pye+/Oz2+kj87ihUrZuLj462248aNM5LMrl27rGn16tW74fYlL6NAgQIp9sXly5dTHCOHDx827u7uZsiQIU7T/v1507ZtWyPJ9OnTJ8U6b3RsDRs2zDgcDqdjJnkZH374oTXt3LlzxtPT0zgcDvPtt99a0/ft25din97I888/bySZc+fO3bKdMf///dO9e/dbtnv88ceNv7+/9XzJkiVGkvnss8+c2pUrV8488sgjTr/TG/29Sn7P3ez9fu7cOSPJPP/887fdBuBBxSWLAOTt7X3L0RaTv+FetGiRkpKS7mod7u7uat++/R23b9OmjbJmzWo9b9asmYKCgrR06dK7Wv/1Tp06pbVr16pDhw7Kmzev07zrL8e6/kxcQkKCzpw5o0KFCsnPz09bt2615i1dulTPPPOMKlasaE3z9vZWWFiY/vrrL+3du/e2NZUtW1YrV65M8WjZsuUdb9eLL77odP+y5DOVhw4duulrFi5cqKSkJA0YMCBFH5mb/S7Onz+v06dPq1KlSoqLi9O+fftuuvzExEQtX75cjRs3dvpdFytWTLVq1XJqO3/+fCUlJal58+Y6ffq09QgMDFThwoX1008/3eY3cE2XLl2cnr/xxhuSZL137nQ9vr6+kqTly5crLi7uhuu6k2Nj6dKlCgwMdNqXmTNnVrdu3XThwgWnm4Bf/3s+d+6cYmJiVKlSJaf3290ej8nb361bN6fp/2Vgi/+yz5KSkrRw4UI1aNDAqX9rsuT3X2qPr/bt2zv1Tb2T4+Df2rZtm+JMvLu7u3WMJCYm6syZM9blotfvn1t57bXXUky7fj0XL17U6dOnVb58eRljtG3bthTtX3nlFetnPz8/FSlSRF5eXmrevLk1vUiRIvLz87vtNsfGxkqS02ftzST/jbhd26xZs1rLlWSdHb/+ssXDhw9r/fr1atmy5R33zbuZ5LObaTViMGAHAhkAXbhw4ZZ/ZF988UVVqFBBr7zyigICAtSiRQvNmTMnVf8MPvLII6kawKNw4cJOzx0OhwoVKnTD/luplfxPymOPPXbLdpcuXdKAAQOUJ08eubu7K0eOHMqZM6eio6Od+hAdOXJERYoUSfH6YsWKWfNvJ0eOHKpRo0aKx/WDitzOv8Nlcji71QADf/75p1xcXFS8ePFbLnvPnj16/vnn5evrKx8fH+XMmdMahOT638W/nTp1SpcuXUqxPyWl+J0dOHBAxhgVLlxYOXPmdHr8/vvvOnny5C1rTPbvdRUsWFAuLi7We+dO1xMSEqJevXppypQpypEjh2rVqqWJEyc6be+dHBtHjhxR4cKFU/zjeaP3R3h4uMqVKycPDw/5+/srZ86cmjRpUqrXeSNHjhyRi4uLChYs6DT9Ru/dO/Vf9tmpU6cUGxt72+MwtcfX3RwH/3ajS/KSkpI0ZswYFS5c2OnzYOfOnbc8BpK5uroqd+7cKaYfPXpU7dq1k7+/v7y9vZUzZ05VqVJFUspjy8PDI8XgQr6+vsqdO3eKvn2+vr633WYfHx9JdxZmkv9G3K7t+fPnnf6euLq66sUXX9Qvv/yi48ePS5IVzv7r5YrStb9f19cHPIzoQwZkcH///bdiYmJUqFChm7bx9PTU2rVr9dNPP2nJkiVatmyZZs+erWeffVYrVqxQpkyZbrueezH8881uKpyYmHhHNd3OG2+8oalTp6pHjx4KDQ2Vr6+vHA6HWrRocddnCu+lm22zMeY/LTc6OlpVqlSRj4+PhgwZooIFC8rDw0Nbt25V79690+x3kZSUJIfDoR9++OGG2/Lvfj536t/vk9SsZ/To0WrXrp0WLVqkFStWqFu3blbftNy5c6fJsZHsl19+UcOGDVW5cmV9+umnCgoKUubMmTV16lSnswtpuc6budWxdb17tc/+i7Q4Dm70efXhhx+qf//+6tChg4YOHSp/f3+5uLioR48ed3QMXH+GLVliYqKee+45nT17Vr1791bRokXl5eWl48ePq127dimWe7Ntu9ttLlq0qKRr/TyTzyTeTKFCheTq6qqdO3fetE18fLz279+f4oznSy+9pE8++USzZs3SW2+9pVmzZql48eKpukXKzezevduqD3hYEciADC55gIh/Xz72by4uLqpevbqqV6+ujz/+WB9++KHee+89/fTTT6pRo8ZN/4G7WwcOHHB6bozRwYMHne6Xli1bNkVHR6d47ZEjR1SgQIGbLjt5XvIf8puZN2+e2rZtq9GjR1vTLl++nGKd+fLl0/79+1O8PvlSvtSc5bqVtP4dS9fOHiUlJWnv3r03/efo559/1pkzZzR//nxVrlzZmn748OHbLj95BMt/709JKX5nBQsWlDFGISEhevTRR1O3Idc5cOCA0xmOgwcPKikpyRpJL7XrKVmypEqWLKl+/fpp3bp1qlChgiZPnqz3339f0u2PjXz58mnnzp1KSkpy+of83++P7777Th4eHlq+fLnTqHNTp05NUdPt1nkj+fLlU1JSkv7880+nM043eu/e6ti63n/ZZzlz5pSPj89tj8N7cXzdzbE0b948VatWTV9++aXT9OjoaKfh2FNj165d+uOPPzR9+nS1adPGmn6/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KkpBQUHW66KiovTEE09IkgIDA3Xy5Emn5V69elVnz561Xh8YGKioqCinNsnPk9v8m7u7u9zd3f/7RgIAAADIkB74M2RxcXFycXEuM1OmTEpKSpIkhYSEKDAwUKtWrbLmx8bGasOGDQoNDZUkhYaGKjo6Wlu2bLHarF69WklJSSpbtqzVZu3atUpISLDarFy5UkWKFLnh5YoAAAAA8F898IGsQYMG+uCDD7RkyRL99ddfWrBggT7++GM9//zzkiSHw6EePXro/fff1+LFi7Vr1y61adNGwcHBaty4sSSpWLFiql27tjp16qSNGzfqt99+U9euXdWiRQsFBwdLklq1aiU3Nzd17NhRe/bs0ezZszVu3Dj16tXLrk0HAAAAkM498JcsTpgwQf3799frr7+ukydPKjg4WJ07d9aAAQOsNu+8844uXryosLAwRUdHq2LFilq2bJk8PDysNt988426du2q6tWry8XFRU2bNtX48eOt+b6+vlqxYoW6dOmi0qVLK0eOHBowYABD3gMAAAC4ZxzGGGN3EelFbGysfH19FRMTIx8fH7vL0UfbTttdQobX58kc93T57OMHw73ezwAA4OFzp9nggb9kEQAAAADSKwIZAAAAANiEQAYAAAAANiGQAQAAAIBNCGQAAAAAYBMCGQAAAADYhEAGAAAAADYhkAEAAACATVIdyC5duqS4uDjr+ZEjRzR27FitWLEiTQsDAAAAgPQu1YGsUaNGmjFjhiQpOjpaZcuW1ejRo9WoUSNNmjQpzQsEAAAAgPQq1YFs69atqlSpkiRp3rx5CggI0JEjRzRjxgyNHz8+zQsEAAAAgPQq1YEsLi5OWbNmlSStWLFCTZo0kYuLi8qVK6cjR46keYEAAAAAkF6lOpAVKlRICxcu1LFjx7R8+XLVrFlTknTy5En5+PikeYEAAAAAkF6lOpANGDBAb731lvLnz6+yZcsqNDRU0rWzZU8++WSaFwgAAAAA6ZVral/QrFkzVaxYUf/8849KlSplTa9evbqef/75NC0OAAAAANKzVAcySQoMDFRgYKDTtGeeeSZNCgIAAACAjOKuAtnmzZs1Z84cHT16VFeuXHGaN3/+/DQpDAAAAADSu1T3Ifv2229Vvnx5/f7771qwYIESEhK0Z88erV69Wr6+vveiRgAAAABIl1IdyD788EONGTNG33//vdzc3DRu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4JY2b96satWqWc979eolSWrbtq2mTZumf/75R7169VJUVJSCgoLUpk0b9e/f32rv4eGhX375RWPHjtW5c+cUEBCgypUra926dcqVK9d93x4AAB4kD3wfsmHDhunpp59W1qxZlStXLjVu3Fj79+93anP58mV16dJF2bNnl7e3t5o2baqoqCinNkePHlW9evWUJUsW5cqVS2+//bauXr3q1Obnn3/WU089JXd3dxUqVEjTpk2715sHAA+8qlWrWpcYXv9I/ozs1q2bjh07pitXrujIkSMaOnSoNXqiJAUHB2vp0qWKiorSlStXdOzYMX3zzTcqUqTIbdfJ2TEAQHr3wAeyNWvWqEuXLlq/fr1WrlyphIQE1axZUxcvXrTa9OzZU99//73mzp2rNWvW6MSJE2rSpIk1PzExUfXq1dOVK1e0bt06TZ8+XdOmTdOAAQOsNocPH1a9evVUrVo1bd++XT169NArr7yi5cuX39ftBQAAAJBxOIwxxu4iUuPUqVPKlSuX1qxZo8qVKysmJkY5c+bUzJkz1axZM0nSvn37VKxYMUVERKhcuXL64YcfVL9+fZ04cUIBAQGSpMmTJ6t37946deqU3Nzc1Lt3by1ZskS7d++21tWiRQtFR0dr2bJlN6wlPj7e6pAuSbGxscqTJ49iYmLk4+NzD38Ld+ajbaftLiHD6/Nkjnu6fPbxg+Fe72cAAPDwiY2Nla+v722zwQN/huzfYmJiJEn+/v6SpC1btighIUE1atSw2iTfqDQiIkKSFBERoZIlS1phTJJq1aql2NhY7dmzx2pz/TKS2yQv40aGDRsmX19f65EnT5602UgAAAAAGcJDFciSkpLUo0cPVahQQY899pgkKTIyUm5ubin6GQQEBCgyMtJqc30YS56fPO9WbWJjY52GYr5e3759FRMTYz2OHTv2n7cRAAAAQMbxUI2y2KVLF+3evVu//vqr3aVIktzd3eXu7m53GQAAAAAeUg9NIOvatavCw8O1du1a5c6d25oeGBioK1euKDo62uksWVRUlAIDA602GzdudFpe8iiM17f598iMUVFR8vHxkaen573YJAC4I/QVtB/9BAEA98oDf8miMUZdu3bVggULtHr1aoWEhDjNL126tDJnzqxVq1ZZ0/bv36+jR48qNDRUkhQaGqpdu3bp5MmTVpuVK1fKx8dHxYsXt9pcv4zk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ZOzgwYPUqVPH9pOQkGBrFxgYyLFjxzhy5AgjRozgpZdeqpSMWa1W5s2bh5+fH/fddx916tThk08+4fTp07Z4iouL+f3vf3/TmD/44AN69epF48aNqVOnDjNmzLBtLyIi1YuGLIqISI3l7e2NyWS6pcId/+n6IY/du3fn2LFjtt/vv//+Su3atGkDwLp16+jUqRNr165l5MiRAERFRREdHc2yZcvw8/Ojdu3aTJw4kZKSEgBq1ar1X+P4/PPPCQ4OZu7cufTt25d69eqxadMmFi9efNvHKCIi9556yEREpMa677776Nu3L7GxsVy5cuUX6wsKCmjfvj0WiwWLxWJbfuLECQoKCujQocMN91urVi3atGlj+6lbt+4N25nNZt544w1mzJhBYWEhAIcPH2bAgAEMGzaMTp060apVK77//nvbNt7e3tSqVeumJfkrnkl788036d69O97e3pw6depX/01ERKRqUUImIiI1WmxsLFarlYCAALZu3Up2djaZmZnExMTw0EMP0bt3b/z8/AgODubLL78kLS2NkJAQHn/8cbp3737brz9kyBAcHByIjY0FriVciYmJpKSkkJmZyZgxYypVdHR1dSUiIoLw8HDee+89Tp48SWpqKmvXrrVtf/r0aTZt2sTJkyeJiYlh27Zttx2niIjYhxIyERGp0Vq1asWXX35JYGAgU6ZMwdfXl6CgIJKSkoiLi8NkMrFjxw4aNGjAY489Ru/evWnVqhUffPDBHXl9R0dHQkNDWbRoEVeuXGHGjBl07dqVvn378sQTT9C4cWMGDhxYaZuZM2cyZcoUZs2aRZs2bRgyZAg//fQTAM888wyTJk0iNDSUzp07k5KSwsyZM+9IrCIicu+pyqKIiEgVFhkZiYeHh+0ZNBERqVnUQyYiIlIFlZSUkJWVhdlsZufOnfYOR0RE7hJVWRQREamCCgsLeeSRRygtLSUmJsbe4YiIyF2iIYsiIiIiIiJ2oiGLIiIiIiIidqKETERERERExE6UkImIiIiIiNiJEjIRERERERE7UUImIiIiIiJiJ0rIRERERERE7EQJmYiIiIiIiJ0oIRMREREREbGT/wdieWR/1FlPfAAAAABJRU5ErkJggg==\n"},"metadata":{}}]},{"cell_type":"markdown","source":["###Q19 - Qual a distribuição por comorbidade entre as pessoas que contraíram COVID?"],"metadata":{"id":"nPJOdFxrUXbC"}},{"cell_type":"code","source":["q19_raw = fato_raw.select(fato_raw.id_resultadoteste,fato_raw.id_diabetes,fato_raw.id_hipertensao,fato_raw.id_doencarespiratoria,fato_raw.id_doencacoracao,fato_raw.id_depressao,fato_raw.id_cancer)\n","q19_raw"],"metadata":{"id":"WhXE9GVXXl-G","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1710868056521,"user_tz":180,"elapsed":2,"user":{"displayName":"Victor DEV","userId":"12673627971948178805"}},"outputId":"bf428b08-06cb-4734-fef6-21d1561e144e"},"execution_count":42,"outputs":[{"output_type":"execute_result","data":{"text/plain":["DataFrame[id_resultadoteste: bigint, id_diabetes: bigint, id_hipertensao: bigint, id_doencarespiratoria: bigint, id_doencacoracao: bigint, id_depressao: bigint, id_cancer: bigint]"]},"metadata":{},"execution_count":42}]},{"cell_type":"code","source":["q19 = q19_raw.filter(\n","    (F.col(\"id_resultadoteste\") == 1) &\n","    (\n","        (F.col(\"id_diabetes\") == 1) |\n","        (F.col(\"id_hipertensao\") == 1) |\n","        (F.col(\"id_doencarespiratoria\") == 1) |\n","        (F.col(\"id_doencacoracao\") == 1) |\n","        (F.col(\"id_depressao\") == 1) |\n","        (F.col(\"id_cancer\") == 1)\n","    )\n",")\n","\n","q19_pd = q19.toPandas()"],"metadata":{"id":"PKYwm0doUchc","executionInfo":{"status":"ok","timestamp":1710868064267,"user_tz":180,"elapsed":7747,"user":{"displayName":"Victor DEV","userId":"12673627971948178805"}}},"execution_count":43,"outputs":[]},{"cell_type":"code","source":["q19_pd"],"metadata":{"id":"f0ZmeNs9jJ3j","colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"status":"ok","timestamp":1710868064267,"user_tz":180,"elapsed":10,"user":{"displayName":"Victor DEV","userId":"12673627971948178805"}},"outputId":"c5fead62-a861-4ab0-a35b-f34138e2fa08"},"execution_count":44,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      id_resultadoteste  id_diabetes  id_hipertensao  id_doencarespiratoria  \\\n","0                     1            2               2                      1   \n","1                     1            2               2                      1   \n","2                     1            2               2                      1   \n","3                     1            2               2                      1   \n","4                     1            2               2                      1   \n","...                 ...          ...             ...                    ...   \n","6712                  1            2               2                      1   \n","6713                  1            2               2                      1   \n","6714                  1            1               1                      2   \n","6715                  1            2               1                      2   \n","6716                  1            1               2                      2   \n","\n","      id_doencacoracao  id_depressao  id_cancer  \n","0                    2             2          2  \n","1                    2             2          2  \n","2                    1             2          2  \n","3                    2             2          2  \n","4                    2             2          2  \n","...                ...           ...        ...  \n","6712                 2             2          2  \n","6713                 2             2          2  \n","6714                 2             2          2  \n","6715                 2             2          2  \n","6716                 2             2          2  \n","\n","[6717 rows x 7 columns]"],"text/html":["\n","  <div id=\"df-9e4ca276-2f5d-48ec-ab1d-0397533a6423\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id_resultadoteste</th>\n","      <th>id_diabetes</th>\n","      <th>id_hipertensao</th>\n","      <th>id_doencarespiratoria</th>\n","      <th>id_doencacoracao</th>\n","      <th>id_depressao</th>\n","      <th>id_cancer</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>6712</th>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>6713</th>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>6714</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>6715</th>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>6716</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>6717 rows × 7 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9e4ca276-2f5d-48ec-ab1d-0397533a6423')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9e4ca276-2f5d-48ec-ab1d-0397533a6423 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9e4ca276-2f5d-48ec-ab1d-0397533a6423');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-64c5e102-606a-4038-9fa6-6d98bc5093ff\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-64c5e102-606a-4038-9fa6-6d98bc5093ff')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-64c5e102-606a-4038-9fa6-6d98bc5093ff button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_11d28e63-2f09-4f80-a3c5-ffbb4c439f71\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('q19_pd')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_11d28e63-2f09-4f80-a3c5-ffbb4c439f71 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('q19_pd');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"q19_pd","summary":"{\n  \"name\": \"q19_pd\",\n  \"rows\": 6717,\n  \"fields\": [\n    {\n      \"column\": \"id_resultadoteste\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 1,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"id_diabetes\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 9,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"id_hipertensao\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 9,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"id_doencarespiratoria\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 2,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"id_doencacoracao\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 9,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"id_depressao\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 9,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"id_cancer\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 9,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":44}]},{"cell_type":"code","source":["num_diabetes = (q19_pd['id_diabetes'] == 1).sum()\n","print(\"Número de pessoas que testaram positivo para COVID e possuem diabetes:\", num_diabetes)\n","\n","num_hipertensao = (q19_pd['id_hipertensao'] == 1).sum()\n","print(\"Número de pessoas que testaram positivo para COVID e possuem hipertensao:\", num_hipertensao)\n","\n","num_doencarespiratoria = (q19_pd['id_doencarespiratoria'] == 1).sum()\n","print(\"Número de pessoas que testaram positivo para COVID e possuem alguma doença respiratória:\", num_doencarespiratoria)\n","\n","num_doencacoracao = (q19_pd['id_doencacoracao'] == 1).sum()\n","print(\"Número de pessoas que testaram positivo para COVID e possuem doença cardíaca:\", num_doencacoracao)\n","\n","num_depressao = (q19_pd['id_depressao'] == 1).sum()\n","print(\"Número de pessoas que testaram positivo para COVID e possuem depressão:\", num_depressao)\n","\n","num_cancer = (q19_pd['id_cancer'] == 1).sum()\n","print(\"Número de pessoas que testaram positivo para COVID e possuem câncer:\", num_cancer)"],"metadata":{"id":"x8hPlqtRrsU2","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1710868064267,"user_tz":180,"elapsed":3,"user":{"displayName":"Victor DEV","userId":"12673627971948178805"}},"outputId":"703a93d7-7416-4b3a-a88f-f2e9a0d83db1"},"execution_count":45,"outputs":[{"output_type":"stream","name":"stdout","text":["Número de pessoas que testaram positivo para COVID e possuem diabetes: 1814\n","Número de pessoas que testaram positivo para COVID e possuem hipertensao: 4206\n","Número de pessoas que testaram positivo para COVID e possuem alguma doença respiratória: 1398\n","Número de pessoas que testaram positivo para COVID e possuem doença cardíaca: 777\n","Número de pessoas que testaram positivo para COVID e possuem depressão: 900\n","Número de pessoas que testaram positivo para COVID e possuem câncer: 286\n"]}]},{"cell_type":"code","source":["condicoes = ['Hipertensão','Diabetes',  'Doença Respiratória', 'Depressão','Doença Cardíaca',  'Câncer']\n","valores = [num_hipertensao,num_diabetes,  num_doencarespiratoria,num_depressao,num_doencacoracao,  num_cancer]\n","\n","plt.figure(figsize=(10, 6))\n","barras = plt.bar(condicoes, valores, color='skyblue')\n","\n","plt.title('Distribuição por comorbidade entre as pessoas que contraíram COVID')\n","plt.xlabel('Condição de Saúde')\n","plt.ylabel('Número de Pessoas')\n","plt.xticks(rotation=45)\n","\n","# Adicionando o label em cada barra\n","for barra in barras:\n","    yval = barra.get_height()\n","    plt.text(barra.get_x() + barra.get_width()/2.0, yval, int(yval), va='bottom', ha='center')\n","\n","plt.tight_layout()\n","plt.show()"],"metadata":{"id":"X3sB3Tf0-9YS","colab":{"base_uri":"https://localhost:8080/","height":607},"executionInfo":{"status":"ok","timestamp":1710871053692,"user_tz":180,"elapsed":641,"user":{"displayName":"Victor DEV","userId":"12673627971948178805"}},"outputId":"ebd48b04-a6fd-4493-b7a0-11265d96f3f7"},"execution_count":50,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["\n","comb = list(combinations(q19_pd.columns[1:], 2))\n","\n","combination_counts = {}\n","for c in comb:\n","    combination_counts[c] = q19_pd[(q19_pd[c[0]] == 1) & (q19_pd[c[1]] == 1)].shape[0]\n","\n","sorted_combinations = sorted(combination_counts.items(), key=lambda x: x[1], reverse=True)\n","\n","# Seleciona as N combinações mais comuns para visualizar\n","N = 10\n","top_combinations = sorted_combinations[:N]\n","\n","labels = [' & '.join(c) for c, _ in top_combinations]\n","counts = [count for _, count in top_combinations]\n","\n","plt.figure(figsize=(12, 8))\n","plt.barh(labels, counts, color='skyblue')\n","plt.xlabel('Total de Pessoas')\n","plt.ylabel('Combinação de Comorbidades')\n","plt.title('Combinações Mais Comuns de Comorbidades')\n","plt.gca().invert_yaxis()\n","plt.tight_layout()\n","\n","plt.show()"],"metadata":{"id":"g_VT-6ggSliL","colab":{"base_uri":"https://localhost:8080/","height":807},"executionInfo":{"status":"ok","timestamp":1710868065550,"user_tz":180,"elapsed":3,"user":{"displayName":"Victor DEV","userId":"12673627971948178805"}},"outputId":"1e418015-2f0f-4803-965a-6655bf53a21d"},"execution_count":47,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x800 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]}]}